name: Deploy Backend

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Configure AWS credentials for CLI use
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy secrets to AWS Secrets Manager
        run: |
          # Create the secret JSON structure
          cat > secrets.json << EOF
          {
            "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
            "TAVILY_API_KEY": "${{ secrets.TAVILY_API_KEY }}"
          }
          EOF
          
          # Check if secret exists
          if aws secretsmanager describe-secret --secret-id "healthbot-backend-secrets-dev" --region us-east-1 >/dev/null 2>&1; then
            echo "Secret exists, updating..."
            aws secretsmanager update-secret \
              --secret-id "healthbot-backend-secrets-dev" \
              --secret-string file://secrets.json \
              --region us-east-1
          else
            echo "Secret does not exist, creating..."
            aws secretsmanager create-secret \
              --name "healthbot-backend-secrets-dev" \
              --description "Secrets for HealthBot backend including API keys" \
              --secret-string file://secrets.json \
              --region us-east-1
          fi
          
          # Clean up the temporary file
          rm secrets.json

      - name: Install dependencies
        working-directory: backend
        run: npm ci

      - name: Deploy backend via Serverless
        working-directory: backend
        run: npx serverless deploy --force
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get API Gateway URL
        id: get-api-url
        run: |
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name healthbot-backend-dev \
            --query "Stacks[0].Outputs[?OutputKey=='ApiGatewayUrl'].OutputValue" \
            --output text)
          echo "API_URL=$API_URL" >> $GITHUB_ENV
          echo "API Gateway URL: $API_URL"