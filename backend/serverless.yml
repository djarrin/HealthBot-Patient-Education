service: healthbot-backend

frameworkVersion: '^3.38.0'

provider:
  name: aws
  region: us-east-1
  runtime: python3.11
  stage: dev
  environment:
    CHAT_SESSIONS_TABLE: ${self:service}-chat-sessions-${self:provider.stage}
    USER_MESSAGES_TABLE: ${self:service}-user-messages-${self:provider.stage}
    SESSION_STATE_TABLE: ${self:service}-session-state-v2-${self:provider.stage}
    SECRETS_NAME: ${self:service}-secrets-${self:provider.stage}
    OPENAI_BASE_URL: https://openai.vocareum.com/v1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - !GetAtt ChatSessionsTable.Arn
            - !GetAtt UserMessagesTable.Arn
            - !GetAtt SessionStateTable.Arn
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:CreateTable
            - dynamodb:DeleteTable
            - dynamodb:ListTables
          Resource:
            - !GetAtt SessionStateTable.Arn
            - !Sub "${SessionStateTable.Arn}/*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
            - secretsmanager:DescribeSecret
          Resource:
            - "arn:aws:secretsmanager:us-east-1:*:secret:healthbot-backend-secrets-*"
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - "arn:aws:dynamodb:us-east-1:*:table/*"

functions:
  processUserMessage:
    handler: src/handlers/process_user_message.handler
    timeout: 180
    events:
      - http:
          path: /process-message
          method: post
          cors: true
          authorizer:
            name: cognitoAuthorizer
            type: COGNITO_USER_POOLS
            arn: !GetAtt CognitoUserPool.Arn
      - http:
          path: /health
          method: get
          cors: true

plugins:
  - serverless-python-requirements
  - serverless-offline
  - serverless-dynamodb-local

custom:
  pythonRequirements:
    dockerizePip: non-linux
  serverless-offline:
    httpPort: 3001
    lambdaPort: 3002
    noPrependStageInUrl: true
    useChildProcesses: true
    runtime: python3.11
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true

resources:
  - ${file(resources/dynamodb.yml)}
  - ${file(resources/api-gateway.yml)}
  - ${file(resources/cognito.yml)}